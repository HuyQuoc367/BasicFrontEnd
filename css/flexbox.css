body {
    margin: 0;
    padding: 0;
}
#wrapper {
    min-height: 50vh;
    border: 5px solid black;
    margin: 20px;
    display: flex;
    flex-direction: row;
    /*bên trong cách bằng 2l hai bên*/
    /* justify-content: space-around;  */
    /*bên trong cách bằng nhau không có cách hai bên*/
    /* justify-content: space-between; */
    /*cách đều nhau*/ 
    /* justify-content: space-evenly;  */
    /* align-items: flex-start; */
    /* flex-wrap: wrap; */
}
.flex-item {
    padding: 15px;
}
.flex-item-1 {
    background: red;
    /* flex-grow: 1; nở ra lấp đầy khoảng trống container*/
    /* height: 50px; */
    flex-basis: 300px;
    flex-shrink: 1; /*mặc định là 1 tự co lại*/
}
.flex-item-2 {
    background: green;
    /* height: 150px; */
    /* flex-grow: 2; */
    flex-shrink: 0;
}
.flex-item-3 {
    background: blue;
    /* height: 30px; */
    flex-shrink: 0;
}

.flex-item-4 {
    background: yellow;
    /* height: 250px; */
    flex-shrink: 0;
}
/* flexbox trick */
html {
    font-size: 62.5%;
}
ul {
    list-style: none;
    margin: 0;
    padding: 0;
}
.list {
    display: flex;
    flex-wrap: wrap;
}
.list-item {
    width: 20%;
    height: 10rem;
    background: red;
}
/* trick 1: 3 list-item 1 2 bên trái 3 nằm phải  */
/* .list-item:last-child {
    margin-left: auto;
} */
@media screen and (max-width: 767px){
    .list-item {
        width: 100%;
        margin-bottom: 1rem;
        align-items: stretch;
        background: blue;
    }
}
/* trick 2 khi đổi flex-direction sang column thì đổi chiều của justify-content và align-items */
/* align-items: stretch chiều ngang bằng nhau or chiều dọc bằng nhau */
/* oder set thứ tự 0 -> .... */

.user {
    display: flex;
}
img {
    width: 100%;
    height: 100%;
}
.image {
    width: 200px;
    height: 200px;
    flex-shrink: 0;
}
.user p {
    width: calc(100%-200px);
}